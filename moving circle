#include <windows.h>
#include <windows.h>
#include <TCHAR.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdLine, int nCmdShow)
{
    HWND     hwnd;
    MSG       msg;
    WNDCLASS WndClass;
    WndClass.style = CS_HREDRAW | CS_VREDRAW;
    WndClass.lpfnWndProc = WndProc;
    WndClass.cbClsExtra = 0;
    WndClass.cbWndExtra = 0;
    WndClass.hInstance = hInstance;
    WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
    WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
    WndClass.lpszMenuName = NULL;
    WndClass.lpszClassName = _T("Window Class Name");
    RegisterClass(&WndClass);
    hwnd = CreateWindow(_T("Window Class Name"),
        _T("Window Title Name"),
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        NULL,
        NULL,
        hInstance,
        NULL
    );
    ShowWindow(hwnd, nCmdShow);
    UpdateWindow(hwnd);
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return (int)msg.wParam;
}
LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam) {

    HDC hdc;
    PAINTSTRUCT ps;
    static int x, y;
    static RECT rectView;

    BOOL GetClientRect(HWND hwnd, LPRECT lprect);
    BOOL Rectangle(HDC hdc, int x1, int y1, int x2, int y2);
    switch (iMsg) {

    case WM_CREATE:
        x = 20; y = 20;
        return 0;

    case WM_PAINT:

        hdc = BeginPaint(hwnd, &ps);
        GetClientRect(hwnd, &rectView);
      Rectangle(hdc, 0, 0, rectView.right-(rectView.right%40), rectView.bottom-(rectView.bottom%40));
        Ellipse(hdc, x - 20, y - 20, x + 20, y + 20);
        EndPaint(hwnd, &ps);
        return 0;

    case WM_KEYDOWN:
        if (wParam == VK_RIGHT) {
            x += 40;
            if (x + 20 > rectView.right)
                x -= 40;
        }

        else if (wParam == VK_DOWN) {
            y += 40;
            if (y + 20 > rectView.bottom)
                y -= 40;
        }
        else if (wParam == VK_LEFT) {
            x -= 40;
            if (x - 20 < rectView.left)
                x += 40;
        }
        else if (wParam == VK_UP) {
            y -= 40;
            if (y - 20 < rectView.top)
                y += 40;
        }
        InvalidateRgn(hwnd, NULL, TRUE);
        break;


    case WM_DESTROY:
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hwnd, iMsg, wParam, lParam);
}
