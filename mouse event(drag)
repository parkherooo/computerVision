#include <windows.h>
#include <windows.h>
#include <TCHAR.h>


LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdLine, int nCmdShow)
{
    HWND     hwnd;
    MSG       msg;
    WNDCLASS WndClass;
    WndClass.style = CS_HREDRAW | CS_VREDRAW;
    WndClass.lpfnWndProc = WndProc;
    WndClass.cbClsExtra = 0;
    WndClass.cbWndExtra = 0;
    WndClass.hInstance = hInstance;
    WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
    WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
    WndClass.lpszMenuName = NULL;
    WndClass.lpszClassName = _T("Window Class Name");
    RegisterClass(&WndClass);
    hwnd = CreateWindow(_T("Window Class Name"),
        _T("Window Title Name"),
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        CW_USEDEFAULT,
        NULL,
        NULL,
        hInstance,
        NULL
    );
    ShowWindow(hwnd, nCmdShow);
    UpdateWindow(hwnd);
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return (int)msg.wParam;
}
LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam) {

    HDC hdc;
    PAINTSTRUCT ps;
    static int cx, cy, rx, ry; 
    static BOOL Drag;
    static int mx, my; 
    int tmp;
    static int a;
    TCHAR str[15];
    switch (iMsg) {

    case WM_CREATE:
        Drag = FALSE;
        cx = 100;
        cy = 100;
        a = 1;
        return 0;

    case WM_PAINT:
        hdc = BeginPaint(hwnd, &ps);
        if (Drag)
        {
            TextOut(hdc, rx, ry, _T("쥐"), _tcslen(_T("쥐")));
        }
        TextOut(hdc, cx, cy, _T("고양이"), _tcslen(_T("고양이")));
        EndPaint(hwnd, &ps);
        break;;
    case WM_LBUTTONDOWN:

        mx = LOWORD(lParam);
        my = HIWORD(lParam);
        rx = mx;
        ry = my;
        Drag = TRUE;
        InvalidateRgn(hwnd, NULL, TRUE);
        SetTimer(hwnd, a, 0.1, NULL);
        break;
    case WM_LBUTTONUP: 
        Drag = FALSE;
        InvalidateRgn(hwnd, NULL, TRUE);
        break;
    case WM_MOUSEMOVE:
        mx = LOWORD(lParam);
        my = HIWORD(lParam);
        if (Drag)
        {
            rx = mx;
            ry = my;
            InvalidateRgn(hwnd, NULL, TRUE);
        }
        break;

    case WM_TIMER:
        if (Drag)
        {
            tmp = rx - cx; 
            if (tmp >= 0)
            {
                cx++;
                if (mx == cx)
                    break;
            }
            else cx--;
            tmp = ry - cy; 
            if (tmp >= 0)
            {
                cy++;
                if (my == cy)
                    break;
            }
            else
                cy--;
        }
        InvalidateRgn(hwnd, NULL, TRUE);
        break;
    case WM_DESTROY:
        KillTimer(hwnd, a);
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hwnd, iMsg, wParam, lParam);
}
